# coding=utf-8
import time
import threading
import serial
import os 
import tkMessageBox as tkmes
class myThread (threading.Thread):   
    def __init__(self, threadID, name, port, baud,rootframe):
        threading.Thread.__init__(self)
        self.threadID = threadID
        self.name = name
        self.thread_stop = False
        self.port = port
        self.baud = baud
        self.uart= serial.Serial(port = self.port,baudrate = self.baud)
        self.statusbar = rootframe
        self.showdata = rootframe
        self.stopcar = rootframe
        self.root = rootframe
        self.menu = rootframe.rootmenu
        self.carstoproot = self.menu.carstoproot
    
    def run(self):
        count = 0               
        while(1): 
            while(self.thread_stop == False):
                try:
                    self.currenttab = self.root.appFrame.index('current')
                except:
                    pass
                 
                if self.currenttab == 2:
                    databuf=''
                    self.uart.write("type:beacon,freenum:16")
                    buf = self.uart.read(self.uart.inWaiting())
                    print buf
                time.sleep(1)
                print self.currenttab
                print self.thread_stop
#                 if buf !="":
#                     databuf = buf
#                     count+=1
#                     self.statusbar.status.setdata('RX:%s Count:%s',databuf,count)
#                     if self.radiovalue  == 0:  
#                         '''datatoshow暂时测试用'''
#                         self.showdata.appFrame.updatetext(databuf+"\n")
#                         pass
#                         time.sleep(0.05)
#                     else:
#                         time.sleep(0.005)
                
        
        